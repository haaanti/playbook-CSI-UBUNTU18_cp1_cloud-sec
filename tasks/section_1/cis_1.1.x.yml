---
- name: "AUTOMATED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  block:
      - name: "AUTOMATED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/cramfs.conf
            regexp: "^(#)?install cramfs(\\s|$)"
            line: install cramfs /bin/true
            create: yes

      - name: "AUTOMATED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Disable cramfs"
        modprobe:
            name: cramfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "AUTOMATED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
  block:
      - name: "AUTOMATED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/freevxfs.conf
            regexp: "^(#)?install freevxfs(\\s|$)"
            line: install freevxfs /bin/true
            create: yes

      - name: "AUTOMATED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled | Disable freevxfs"
        modprobe:
            name: freevxfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "AUTOMATED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
  block:
      - name: "AUTOMATED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/jffs2.conf
            regexp: "^(#)?install jffs2(\\s|$)"
            line: install jffs2 /bin/true
            create: yes

      - name: "AUTOMATED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled | Disable jffs2"
        modprobe:
            name: jffs2
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "AUTOMATED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  block:
      - name: "AUTOMATED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/hfs.conf
            regexp: "^(#)?install hfs(\\s|$)"
            line: install hfs /bin/true
            create: yes

      - name: "AUTOMATED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled | Disable hfs"
        modprobe:
            name: hfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.4
      - hfs

- name: "AUTOMATED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  block:
      - name: "AUTOMATED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/hfsplus.conf
            regexp: "^(#)?install hfsplus(\\s|$)"
            line: install hfsplus /bin/true
            create: yes

      - name: "AUTOMATED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled | Disable hfsplus"
        modprobe:
            name: hfsplus
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.5
      - hfsplus

- name: "AUTOMATED | 1.1.1.6 | PATCH | Ensure mounting of udf filesystems is disabled"
  block:
      - name: "AUTOMATED | 1.1.1.6 | PATCH | Ensure mounting of udf filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/udf.conf
            regexp: "^(#)?install udf(\\s|$)"
            line: install udf /bin/true
            create: yes

      - name: "AUTOMATED | 1.1.1.6 | PATCH | Ensure mounting of udf filesystems is disabled | Disable udf"
        modprobe:
            name: udf
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.6
      - udf

- name: "AUTOMATED | 1.1.2 | PATCH | Ensure /tmp is configured"
  mount:
      path: /tmp
      src: /tmp
      state: mounted
      fstype: tmpfs
      opts: "{{ ubtu18cis_tmp_fstab_options }}"
  when:
      - ubtu18cis_rule_1_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.2
      - tmp

- name: |
    "AUTOMATED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition"
    "AUTOMATED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition"
    "AUTOMATED | 1.1.5 | PATCH | Ensure noexec option set on /tmp partition"
  mount:
      name: /tmp
      src: /tmp
      state: remounted
      fstype: tmpfs
      opts: "{{ ubtu18cis_tmp_fstab_options }}"
  when:
      - ubtu18cis_rule_1_1_3 or
        ubtu18cis_rule_1_1_4 or
        ubtu18cis_rule_1_1_5
      - ubtu18cis_vartmp['enabled']
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5
      - tmp

- name: "AUTOMATED | 1.1.6 | PATCH | Ensure /dev/shm is configured"
  mount:
      path: /dev/shm
      src: /dev/shm
      state: mounted
      fstype: tmpfs
      opts: "{{ ubtu18cis_shm_fstab_options }}"
  when:
      - ubtu18cis_rule_1_1_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.6
      - tmp

- name: |
    "AUTOMATED | 1.1.7 | PATCH | Ensure nodev option set on /dev/shm partition"
    "AUTOMATED | 1.1.8 | PATCH | Ensure nosuid option set on /dev/shm partition"
    "AUTOMATED | 1.1.9 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
      name: /dev/shm
      src: tmpfs
      state: mounted
      fstype: tmpfs
      opts: "{{ ubtu18cis_shm_fstab_options }}"
  when:
      - ubtu18cis_rule_1_1_7 or
        ubtu18cis_rule_1_1_8 or
        ubtu18cis_rule_1_1_9
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.7
      - rule_1.1.8
      - rule_1.1.9
      - /dev/shm

- name: "MANUAL | 1.1.19 | AUDIT | Ensure nodev option set on removable media partitions"
  debug:
      msg: "Warning!!!! Not relevant control"
  when:
      - ubtu18cis_rule_1_1_19
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_1.1.19
      - removable_media

- name: "MANUAL | 1.1.20 | AUDIT | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "Warning!!!! Not relevant control"
  when:
      - ubtu18cis_rule_1_1_20
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_1.1.20
      - removable_media

- name: "MANUAL | 1.1.21 | AUDIT | Ensure noexec option set on removable media partitions"
  debug:
      msg: "Warning!!!! Not relevant control"
  when:
      - ubtu18cis_rule_1_1_21
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_1.1.21
      - removable_media

- name: "AUTOMATED | 1.1.22 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null | xargs -I '{}' chmod a+t '{}'
  failed_when: ubtu18cis_1_1_22_status.rc>0
  register: ubtu18cis_1_1_22_status
  when:
      - ubtu18cis_rule_1_1_22
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.22
      - sticky_bit

- name: "AUTOMATED | 1.1.23 | PATCH | Disable Automounting"
  service:
      name: autofs
      state: stopped
      enabled: no
  when:
      - ubtu18cis_rule_1_1_23
      - ubtu18cis_autofs_service_status.stdout == "loaded"
      - not ubtu18cis_allow_autofs
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.23
      - automounting

- name: "AUTOMATED | 1.1.24 | PATCH | Disable USB Storage"
  block:
      - name: "AUTOMATED | 1.1.24 | PATCH | Disable USB Storage | Set modprobe config"
        lineinfile:
            path: /etc/modprobe.d/usb_storage.conf
            regexp: '^install usb-storage'
            line: 'install usb-storage /bin/true'
            create: yes

      - name: "AUTOMATED | 1.1.24 | PATCH | Disable USB Storage | Remove usb-storage module"
        modprobe:
            name: usb-storage
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_24
  tags:
      - level1-server
      - level2-workstation
      - automated
      - patch
      - rule_1.1.24
      - usb_storage
